★ Array(배열)
- 같은 자료형의 여러 데이터를 묶어서 관리하는 자료구조
- 배열은 여러 값을 구별하기 위해 index라고 하는 정수 값을 이용한다.
- 배열의 각 멤버 요소는 단일 변수와 동일하다.
- 배열은 연속된 메모리 공간에 배치한다.
- 배열의 길이는 고정이 된다.
- 배열은 Reference Type이고, 변수는 대상을 참조하는 변수이다.(본체가 아니다)
- 배열을 선언하는 방법에는 여러가지가 있다.
    -> int[] arr1 : 정수형 배열을 참조할 수 있는 참조변수만 선언 (실제 배열은 없는 형태)
    -> int[] arr2 = {1, 2, 3, 4, 5} : primitive type이거나, 다른 변수가 만들어져 있으면 중괄호만으로 생성 가능
    -> int[] arr4 = new int[] {1, 2, 3, 4, 5} : 객체의 배열을 생성하기 위해서는 이와 같이 new 자료형[] 형식으로 생성가능
    -> int[] arr5 = new int[5] : 배열의 요소를 명시하지 않고, 빈칸으로만 배열을 생성할 수도 있으며, 길이가 필요하다.
                                                 이때, 배열 멤버 요소의 초기값은 자료형에 맞는 0값으로 생성된다.
- 배열을 가리키는 변수는 참조타입이므로, 다른 대상을 참조할 수 있다.

★ Sort(정렬)
- 여러 데이터를 원하는 형태로 나열하기 위해 사용한다(오름차순, 내림차순 정렬)
- Arrays : 배열을 제어하기 위해 도움이 되는 함수들이 모여있는 클래스
    -> Arrays.sort(arr) - 별도의 객체를 생성하지 않아도, 정렬 함수를 호출 할 수 있다. (static)

★ 문자열 함수 & 배열 정렬
- 문자열의 toCharArray() 함수는 문자열을 단일 문자 형태로 쪼개어 배열 형태로 반환하는 함수이다.
- 문자열은 문자의 배열과 같다.
- 문자(char)는 정수형이다 (글자의 코드를 정수로 저장한다.
- 문자열을 구성하는 첫번째 글자를 비교하여 정렬한다.
- 만약, 첫번째 글자가 같다면, 그 다음 글자끼리 비교한다.
- 문자열의 compareTo(s) 함수는 위의 방법으로 원본 문자열과 s 문자열의 차이를 정수로 반환한다.