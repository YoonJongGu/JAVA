★ 개발 기본 규칙
- 프로젝트 명은 첫글자를 소문자로 지정한다.
- 자바의 소스코드는 클래스가 기본 구성 단위이다.
- 자바에서 클래스를 제외한 나머지 요소는 모두 첫글자를 소문자로 시작한다. (변수, 함수, 접근제한자, 패키지, 프로젝트...)
- 단, 클래스의 static final 멤버는 모든 글자를 대문자로 작성하며 단어 구분은 '_'를 이용한다.
- 변수 및 함수의 이름은 소문자, '_'로 시작할 수 있으며 숫자는 첫번째 글자로 사용할 수 없다.

★ 자료형 (data type)
 1. Primitive Type (기본 자료형, 단순 자료형, 원시 자료형)
 *	boolean		1바이트	논리값		true, false 
 *  	byte		1바이트	정수(8비트)	-128 ~ +127
 *  	short		2바이트	정수(16비트)	-32768 ~ +32767
 *  	char		2바이트	정수(글자)		0 ~ 65535
 * 	int		4바이트	정수(32비트)	약 -21억 ~ 약 +21억
 *  	long		8바이트	정수(64비트)	-922조 ~ +922조
 *  	float		4바이트	실수
 * 	double		8바이트	실수

2. Reference Type (참조 자료형)
 *	Object
 *	String
 *	Array
 *	Wrapper 클래스 (Byte, Short, Integer, Long, Float, Double, Character, Boolean)

3. 차이점
- 참조 자료형은 기본 자료형과 달리 메서드를 가질 수 있다.
- 참조 자료형의 기본값은 null이다
 -> 따라서 참조형 객체가 초기화되지 않으면 nullPointerException 발생한다.

★ 자료형 변환
- 대입 연산 시, 좌변과 우변의 자료형은 같아야 한다.
- 일시적으로 우변의 값을 원하는 자료형으로 변환한 이후 대입한다. (casting)
- 암묵적 형변환(ex - int형 변수를 double형 변수에 옮겨담으면 암묵적으로 형변환이 발생한다)

★ 연산자(Operator)
- 데이터를 연산하기 위해 사용하는 기호 혹은 단어.
 * 	단항 연산자 : 하나의 변수 혹은 값에 대하여 연산을 처리한다 (num++)
 * 	이항 연산자 : 두개의 값을 이용하여 연산을 수행한다 (n1 + n2)
 * 	삼항 연산자 : 세개의 값을 이용하여 연산을 수행한다 (login ? "로그인" : "로그아웃")

 *	산술 연산 : +, -, *, /, %
 *	증감 연산 : ++, --
 *	대입 연산 : =
 *	복합 대입 연산 : +=, -=, *=, /=, %=
 *	비교 연산 : >, <, >=, <=, ==, !=
 *	논리 연산 : &&, ||, !
 *	비트 연산 : <<, >>, |, &
 *	최우선 연산자 : ., [], instanceof(), ()

★ 연산자 특징
- 산술 연산, 각 항의 자료형에 따라 결과의 자료형이 달라질 수 있다.
- 정수와 정수는 정수가 나온다. 실수와 정수는 실수가 나온다. 실수와 실수는 실수가 나온다.
- 어떤 수를 0으로 나누는 연산은 불가능하다.
- 나머지 연산(%)은 홀수, 짝수, 약수, 배수를 구분할 때 사용할 수 있다.
- 어떤 수를 10의 제곱수로 나누면 0의 개수만큼 뒷자리를 분리할 수 있다.
- &&(and) 연산자의 경우 처음 조건이 거짓이 나온다면 이후의 조건식은 판별하지 않고 거짓의 결과를 낸다.
- ||(or) 연산자의 경우 처음 조건에서 참이 나온다면 이후의 조건식은 판별하지 않고 참을 낸다.